
services:
  postgres:
    image: postgres:15
    container_name: library
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: library_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: symfony_app
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/library_db?serverVersion=15&charset=utf8&options='-c statement_timeout=5000'"
    working_dir: /var/www/html
    command: >
      bash -c "composer install &&
               php bin/console doctrine:database:create --if-not-exists &&
               php bin/console doctrine:migrations:migrate --no-interaction &&
               php bin/console cache:warmup && php-fpm"
  
  nginx:
    image: nginx:1.25
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./public:/var/www/html/public
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
      - cache_data:/var/cache/nginx
    depends_on:
      - app

volumes:
  postgres_data: {}
  cache_data: {}